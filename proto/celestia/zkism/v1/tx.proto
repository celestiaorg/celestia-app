syntax = "proto3";

package celestia.zkism.v1;

import "celestia/zkism/v1/types.proto";
import "cosmos/msg/v1/msg.proto";
import "cosmos_proto/cosmos.proto";
import "gogoproto/gogo.proto";

option go_package = "github.com/celestiaorg/celestia-app/x/zkism/types";

// Msg defines the zkism module Msg service.
service Msg {
  option (cosmos.msg.v1.service) = true;

  // CreateZKExecutionISM defines the rpc method for creating a new ZK execution ISM.
  rpc CreateZKExecutionISM(MsgCreateZKExecutionISM) returns (MsgCreateZKExecutionISMResponse);

  // UpdateZKExecutionISM defines the rpc method for updating an existing ZK execution ISM.
  rpc UpdateZKExecutionISM(MsgUpdateZKExecutionISM) returns (MsgUpdateZKExecutionISMResponse);

  // SubmitMessages defines the rpc method for verifying state membership of messages.
  rpc SubmitMessages(MsgSubmitMessages) returns (MsgSubmitMessagesResponse);

  // UpdateParams defines the rpc method for updating the module parameters.
  rpc UpdateParams(MsgUpdateParams) returns (MsgUpdateParamsResponse);
}

// MsgCreateZKExecutionISM is the request type for CreateZKExecutionISM.
message MsgCreateZKExecutionISM {
  option (cosmos.msg.v1.signer) = "creator";

  // creator is the message sender.
  string creator = 1;
  // state commitment root of the remote chain
  bytes state_root = 2;
  // latest tracked height of the remote chain
  uint64 height = 3;
  // the celestia namespace identifier used by the application
  bytes namespace = 4;
  // the public key of the sequencer
  bytes sequencer_public_key = 5;
  // the sp1 groth16 verifier key
  bytes groth16_vkey = 6;
  // hash-based commitment to the verifier key used for state transition
  bytes state_transition_vkey = 7;
  // hash-based commitment to the verifier key used for state membership
  bytes state_membership_vkey = 8;
}

// MsgCreateZKExecutionISMResponse is the response type for CreateZKExecutionISM.
message MsgCreateZKExecutionISMResponse {
  string id = 1 [
    (gogoproto.customtype) = "github.com/bcp-innovations/hyperlane-cosmos/util.HexAddress",
    (gogoproto.nullable)   = false
  ];
}

// MsgUpdateZKExecutionISM is the request type for UpdateZKExecutionISM.
message MsgUpdateZKExecutionISM {
  option (cosmos.msg.v1.signer) = "signer";

  // ism identifier
  string id = 1 [
    (gogoproto.customtype) = "github.com/bcp-innovations/hyperlane-cosmos/util.HexAddress",
    (gogoproto.nullable)   = false
  ];
  // height is the Celestia height associated with the state transition update.
  uint64 height = 2;
  // proof is the ZK proof bytes (groth16).
  bytes proof = 3;
  // the public values used for proof verification.
  bytes public_values = 4;
  // the tx signer address
  string signer = 5;
}

// MsgUpdateZKExecutionISMResponse is the response type for UpdateZKExecutionISM.
message MsgUpdateZKExecutionISMResponse {
  // updated ism trusted state root (hex-encoded)
  string state_root = 1;
  // updated ism trusted height
  uint64 height = 2;
}

// MsgSubmitMessages is the request type for SubmitMessages.
message MsgSubmitMessages {
  option (cosmos.msg.v1.signer) = "signer";

  // ism identifier
  string id = 1 [
    (gogoproto.customtype) = "github.com/bcp-innovations/hyperlane-cosmos/util.HexAddress",
    (gogoproto.nullable)   = false
  ];
  // height is the EVM application height associated with the state transition update.
  uint64 height = 2;
  // proof is the ZK proof bytes (groth16).
  bytes proof = 3;
  // the public values used for proof verification.
  bytes public_values = 4;
  // the tx signer address
  string signer = 5;
}

// MsgSubmitMessagesResponse is the response type for SubmitMessages.
message MsgSubmitMessagesResponse {}

// MsgUpdateParams is the request type for UpdateParams.
message MsgUpdateParams {
  option (cosmos.msg.v1.signer) = "authority";

  // authority is the address that controls the module (defaults to x/gov unless overwritten).
  string authority = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];
  // params defines the x/zkism parameters to update.
  //
  // NOTE: All parameters must be supplied.
  Params params = 2 [(gogoproto.nullable) = false];
};

// MsgUpdateParamsResponse defines the response type for UpdateParams.
message MsgUpdateParamsResponse {};
