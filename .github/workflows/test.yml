name: test
on:
  workflow_call:

jobs:
  test-short:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 #v4.2.2

      - uses: actions/setup-go@d35c59abb061a4a6fb18e82ac0862c26744d6ab5 #v5.5.0
        with:
          go-version-file: "go.mod"

      - name: Run tests in short mode
        run: make test-short
        timeout-minutes: 10

  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 #v4.2.2

      - uses: actions/setup-go@d35c59abb061a4a6fb18e82ac0862c26744d6ab5 #v5.5.0
        with:
          go-version-file: "go.mod"

      - name: Run tests
        run: make test

  test-coverage:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 #v4.2.2

      - uses: actions/setup-go@d35c59abb061a4a6fb18e82ac0862c26744d6ab5 #v5.5.0
        with:
          go-version-file: "go.mod"

      - name: Generate coverage.txt
        run: make test-coverage

      - name: Upload coverage.txt
        uses: codecov/codecov-action@18283e04ce6e62d37312384ff67231eb8fd56d24 #v5.4.3
        with:
          files: ./coverage.txt

  test-race:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 #v4.2.2

      - uses: actions/setup-go@d35c59abb061a4a6fb18e82ac0862c26744d6ab5 #v5.5.0
        with:
          go-version-file: "go.mod"

      - name: Run tests in race mode
        run: make test-race

  test-fuzz:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 #v4.2.2

      - uses: actions/setup-go@d35c59abb061a4a6fb18e82ac0862c26744d6ab5 #v5.5.0
        with:
          go-version-file: "go.mod"

      - name: Run fuzz tests
        run: make test-fuzz

  test-multiplexer:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 #v4.2.2

      - uses: actions/setup-go@d35c59abb061a4a6fb18e82ac0862c26744d6ab5 #v5.5.0
        with:
          go-version-file: "go.mod"

      - name: Run multiplexer tests
        run: make test-multiplexer

  test-docker-e2e:
    runs-on: ubuntu-latest
    # if one test fails, continue running the rest.
    continue-on-error: true
    strategy:
      matrix:
        testcase:
          - TestE2ESimple
          - TestStateSync

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version-file: "go.mod"

      - name: Generate image tag
        id: tag
        run: echo "value=$(echo $GITHUB_SHA | cut -c1-8)" >> $GITHUB_OUTPUT

      - name: Build Docker image locally
        # explicitly not pushing to ghcr as other workflows build and push there.
        # ideally we don't need to build an image on each runner and can use a single
        # more powerful self hosted runner to speed things up.
        run: docker build -t "celestia-app:${{ steps.tag.outputs.value }}" . -f docker/multiplexer.Dockerfile

      - name: Run E2E test
        env:
          # use the locally built image
          CELESTIA_IMAGE: celestia-app
          CELESTIA_TAG: ${{ steps.tag.outputs.value }}
        run: make test-docker-e2e test=${{ matrix.testcase }}
